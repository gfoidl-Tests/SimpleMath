jobs:
  - job: build_and_test
    displayName: build and test
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: steps/yarn-install.yml

      - bash: yarn run build
        displayName: build

      - bash: yarn run build-esm
        displayName: build-esm

      - bash: yarn run lint
        displayName: lint

      - bash: yarn run test-coverage
        displayName: test
      
      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: JUnit
          testResultsFiles: 'junit.xml'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: 'coverage/cobertura-coverage.xml'

      - bash: |
          # There could also be an entry in the script-section of package.json to run this
          yarn ts-node .tools/publish-package-json.ts

          cp Readme.md lib
        displayName: prepare package

      - bash: |
          cd lib
          yarn pack
          mv *.tgz package.tgz
          echo "------------------------------------------------------"
          ls -la
        displayName: package tar-ball

      - publish: lib/package.tgz
        artifact: tarball

      - bash: yarn run doc-create
        displayName: create docs

      - publish: doc
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        artifact: docs

      - bash: |
          cd lib

          count=0

          for dts in **/*.d.ts; do
              tmp=$(cat $dts | grep "@param" | wc -l)
              echo "$dts: $tmp matches"
              ((count+=tmp))
          done

          echo ""
          echo "matches: $count"

          if [[ $count == 0 ]]; then
              echo "##vso[task.logissue type=error]there should be at least one @param in the d.ts files"
              exit 1
          fi
        displayName: check for TsDoc comments
